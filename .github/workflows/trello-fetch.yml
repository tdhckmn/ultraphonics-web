name: Fetch Trello Data

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Fetch Trello Data and Save as JSON
        run: |
          node -e "
            const fs = require('fs');
            const path = require('path');
            const https = require('https');

            const apiKey = '${{ secrets.TRELLO_API_KEY }}';
            const apiToken = '${{ secrets.TRELLO_API_TOKEN }}';
            const boardId = 'oatz1C1E'; // For Setlists
            const showsListId = '68e6806e872f2fbfb6fa7f56'; // For Shows

            function httpsGet(url) {
              return new Promise((resolve, reject) => {
                https.get(url, (res) => {
                  let body = '';
                  res.on('data', (chunk) => body += chunk);
                  res.on('end', () => {
                    if (res.statusCode === 200) {
                      resolve(JSON.parse(body));
                    } else {
                      reject(`Trello API error: \${res.statusCode}`);
                    }
                  });
                }).on('error', (e) => reject(`Fetch error: \${e.message}`));
              });
            }

            async function fetchAllData() {
              try {
                // Fetch Setlist Data
                const setlistUrl = `https://api.trello.com/1/boards/\${boardId}?key=\${apiKey}&token=\${apiToken}&lists=open&cards=open&members=all`;
                const setlistData = await httpsGet(setlistUrl);
                const setlistOutputPath = path.join(__dirname, 'api', 'setlist.json');
                fs.mkdirSync(path.dirname(setlistOutputPath), { recursive: true });
                fs.writeFileSync(setlistOutputPath, JSON.stringify(setlistData, null, 2));
                console.log('Successfully fetched and saved Setlist data.');

                // Fetch and Process Shows Data
                const showsUrl = `https://api.trello.com/1/lists/\${showsListId}/cards?key=\${apiKey}&token=\${apiToken}&fields=name,due,desc`;
                const showsCards = await httpsGet(showsUrl);

                const shows = showsCards.map(card => {
                  const details = {};
                  const lines = (card.desc || '').split('\\n');
                  for (const line of lines) {
                      const parts = line.split(':');
                      if (parts.length >= 2) {
                          const key = parts[0].trim();
                          const value = parts.slice(1).join(':').trim();
                          if (key === 'City') details.city = value;
                          if (key === 'State') details.state = value;
                          if (key === 'End Time') details.endTime = value;
                          if (key === 'Is Private') details.isPrivate = value.toLowerCase() === 'true';
                          if (key === 'Event Link') details.eventLink = value;
                      }
                  }
                  
                  const showDate = new Date(card.due);
                  return {
                    date: `\${showDate.getMonth() + 1}/\${showDate.getDate()}/\${showDate.getFullYear()}`,
                    venue: card.name,
                    city: details.city || '',
                    state: details.state || '',
                    startTime: showDate.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit', hour12: true }),
                    endTime: details.endTime || '',
                    isPrivate: details.isPrivate || false,
                    eventLink: details.eventLink || '',
                  };
                });
                
                const showsOutputPath = path.join(__dirname, 'api', 'shows.json');
                fs.writeFileSync(showsOutputPath, JSON.stringify(shows, null, 2));
                console.log('Successfully fetched and saved Shows data.');

              } catch (error) {
                console.error(error);
                process.exit(1);
              }
            }

            fetchAllData();
          "
      - name: Commit and push if there are changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add api/setlist.json api/shows.json
          git diff --staged --quiet || git commit -m "Automated: Update Trello data"
          git push